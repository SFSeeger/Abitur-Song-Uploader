"""
Django settings for songuploader project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os
from pathlib import Path

import bleach
from django.contrib.messages import constants as message_constants
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "crispy_forms",
    "crispy_bulma",
    "django_q",
    "django_extensions",
    "django_prometheus",
    "dbbackup",
    "tinymce",
    "pictures",
    "django_helpers",
    "uploader",
    "voting",
    "polls",
    "theme",
    "django_cleanup.apps.CleanupConfig",
]

MIDDLEWARE = [
    "django_prometheus.middleware.PrometheusBeforeMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django_prometheus.middleware.PrometheusAfterMiddleware",
]

ROOT_URLCONF = "songuploader.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "theme/templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.i18n",
                "songuploader.context_processors.get_public_domain",
            ],
        },
    },
]

WSGI_APPLICATION = "songuploader.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django_prometheus.db.backends.mysql",
        "NAME": os.environ.get("MYSQL_DB"),
        "USER": os.environ.get("MYSQL_USER"),
        "PASSWORD": os.environ.get("MYSQL_PASSWORD"),
        "HOST": "localhost",
        "PORT": 3306,
        "OPTIONS": {
            "charset": "utf8mb4",
            "use_unicode": True,
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Email Config
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Europe/Berlin"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = "static/"
STATICFILES_DIRS = [BASE_DIR / "theme/node_modules", BASE_DIR / "theme/static"]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

APPEND_SLASH = True

CRISPY_ALLOWED_TEMPLATE_PACKS = "bulma"
CRISPY_TEMPLATE_PACK = "bulma"
# Crispy form overrides


Q_CLUSTER = {
    "name": "songuploader",
    "workers": 4,
    "timeout": 120,
    "retry": 120,
    "queue_limit": 50,
    "bulk": 10,
    "orm": "default",
}

CRON_TASKS = {
    "clearsessions": {
        "args": "clearsessions",
        "schedule_type": "D",
        "run_at": "02:00",
    },
    "dbbackup": {
        "args": "dbbackup",
        "schedule_type": "D",
        "run_at": "02:05",
    },
    "backup_media": {
        "args": "backup_media",
        "schedule_type": "D",
        "run_at": "02:15",
    },
    "notify_closing_poll": {
        "args": "notify_closing_poll",
        "schedule_type": "D",
        "run_at": "02:20",
    },
}

MESSAGE_TAGS = {
    message_constants.DEBUG: "is-success is-light",
    message_constants.INFO: "is-info",
    message_constants.SUCCESS: "is-success",
    message_constants.WARNING: "is-warning",
    message_constants.ERROR: "is-danger",
}

LANGUAGES = [
    ("de", _("German")),
    ("en", _("English")),
]

MEDIA_ROOT = BASE_DIR / "media"
MEDIA_URL = "/media/"
TINYMCE_DEFAULT_CONFIG = {
    "theme": "silver",
    "height": 500,
    "menubar": False,
    "plugins": "advlist,autolink,lists,link,image,charmap,print,preview,anchor,"
    "searchreplace,visualblocks,code,fullscreen,insertdatetime,media,table,paste,"
    "code,help,wordcount",
    "toolbar": "undo redo | bold italic underline strikethrough | numlist bullist checklist | fontsizeselect formatselect |"
    "alignleft aligncenter alignright alignjustify | outdent indent | forecolor "
    "backcolor casechange permanentpen formatpainter removeformat | pagebreak | charmap emoticons | "
    "fullscreen  preview save | insertfile image media pageembed template link anchor codesample | "
    "a11ycheck ltr rtl | showcomments addcomment code",
}

ALLOWED_TAGS = frozenset(
    {"p", "img", "br", "pre", "span", "h1", "h2", "h3", "h4", "h5", "h6", "iframe"}
    | bleach.sanitizer.ALLOWED_TAGS
)
ALLOWED_ATTRIBUTES = {
    "*": ["style", "class"],
    "img": ["src", "alt", "width", "height"],
    "iframe": [
        "title",
        "src",
        "width",
        "height",
        "frameborder",
        "allowfullscreen",
        "allow",
    ],
}
ALLOWED_ATTRIBUTES = {**ALLOWED_ATTRIBUTES, **bleach.sanitizer.ALLOWED_ATTRIBUTES}

PUBLIC_DOMAIN = "https://intern.rgabi.de"

DBBACKUP_STORAGE = "django.core.files.storage.FileSystemStorage"
DBBACKUP_STORAGE_OPTIONS = {"location": "/var/local/songuploader/backups/db/"}

MEDIA_BACKUP_DIR = "/var/local/songuploader/backups/media/"

PICTURES = {
    "BREAKPOINTS": {
        "xs": 576,
        "s": 768,
        "m": 992,
        "l": 1200,
        "xl": 1400,
    },
    "GRID_COLUMNS": 12,
    "CONTAINER_WIDTH": 1200,
    "FILE_TYPES": ["WEBP"],
    "PIXEL_DENSITIES": [1, 2],
    "USE_PLACEHOLDERS": False,
}
